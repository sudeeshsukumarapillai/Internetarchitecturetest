openapi: 3.0.0
info:
  title: Note Taking App API
  description: Backend server for a note-taking application using Spring Boot and Keycloak for authentication/authorization.
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/v1'
paths:
  /notes:
    get:
      summary: Retrieve all notes for the user
      operationId: getNotes
      security:
        - BearerAuth: [ ]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      responses:
        '200':
          description: A list of notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new note
      operationId: createNote
      security:
        - BearerAuth: [ ]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNoteRequest'
      responses:
        '201':
          description: Note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /notes/{noteId}:
    get:
      summary: Retrieve a note by ID
      operationId: getNoteById
      security:
        - BearerAuth: [ ]
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      responses:
        '200':
          description: A single note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Note not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a note by ID
      operationId: updateNote
      security:
        - BearerAuth: [ ]
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNoteRequest'
      responses:
        '200':
          description: Note updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Note not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a note by ID
      operationId: deleteNote
      security:
        - BearerAuth: [ ]
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      responses:
        '204':
          description: Note deleted
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Note not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Note:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        title:
          type: string
          maxLength: 255
          nullable: false
        content:
          type: string
          nullable: false
        createdAt:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
        - title
        - content
    CreateNoteRequest:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
          nullable: false
        content:
          type: string
          nullable: false
      required:
        - title
        - content
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: []